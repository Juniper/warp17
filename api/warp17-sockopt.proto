//
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
//
// Copyright (c) 2016, Juniper Networks, Inc. All rights reserved.
//
//
// The contents of this file are subject to the terms of the BSD 3 clause
// License (the "License"). You may not use this file except in compliance
// with the License.
//
// You can obtain a copy of the license at
// https://github.com/Juniper/warp17/blob/master/LICENSE.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
// this list of conditions and the following disclaimer.
//
// 2. Redistributions in binary form must reproduce the above copyright
// notice, this list of conditions and the following disclaimer in the
// documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
// contributors may be used to endorse or promote products derived from this
// software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.
//
// File name:
//     warp17-sockopt.proto
//
// Description:
//     Definitions for options used for customizing the networking stack at
//     various levels.
//
// Author:
//     Dumitru Ceara, Eelco Chaudron
//
// Initial Created:
//     06/28/2016
//
// Notes:
//
//

message PortOptions {
    optional uint32 po_mtu = 1 [default = 1500];
}

message VlanSockopt {
    optional uint32 vlanso_id  = 1 [default = 0];
    optional uint32 vlanso_pri = 2 [default = 0];
}

message TcpSockopt {
    optional uint32 to_win_size          =  1 [default = 1024];
    optional uint32 to_syn_retry_cnt     =  2 [default = 24];   // actually 8bit
    optional uint32 to_syn_ack_retry_cnt =  3 [default = 24];   // actually 8bit
    optional uint32 to_data_retry_cnt    =  4 [default = 128];  // actually 8bit
    optional uint32 to_retry_cnt         =  5 [default = 12];   // actually 8bit

    optional uint32 to_rto               =  6 [default = 50];   // in msec
    optional uint32 to_fin_to            =  7 [default = 100];  // in msec
    optional uint32 to_twait_to          =  8 [default = 500];  // in msec
    optional uint32 to_orphan_to         =  9 [default = 100];  // in msec

    optional bool   to_skip_timewait     = 10 [default = false];
    optional bool   to_ack_delay         = 11 [default = false];
}

message Ipv4Sockopt {
    optional bool   ip4so_rx_tstamp   = 1 [default = false];
    optional bool   ip4so_tx_tstamp   = 2 [default = false];
    optional uint32 ip4so_tos         = 3 [default = 0];
}

